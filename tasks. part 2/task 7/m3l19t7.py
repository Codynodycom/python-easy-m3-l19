'''
Задача 7

Вы создали собственную версию шифра Цезаря, но вам хочется усложнить его, чтобы сделать его 
более надежным. Для этого вы решили добавить возможность использования произвольного значения 
сдвига для каждой буквы в сообщении в зависимости от их позиции в строке. Теперь сдвиг будет 
изменяться в соответствии с паттерном, который вы определите.

Вам нужно написать функцию complex_caesar_cipher(message, pattern), которая будет принимать 
строку сообщения и паттерн для определения сдвига, а затем возвращать зашифрованное сообщение 
в соответствии с заданным паттерном.

Паттерн представляет собой список чисел, определяющих сдвиг для каждой буквы в сообщении. 
Если длина паттерна меньше длины сообщения, он должен циклически повторяться.
'''

def complex_caesar_cipher(message, pattern):
    result = ""
    alphabet = "abcdefghijklmnopqrstuvwxyz"

    # Проходим по каждому символу в сообщении
    for i, char in enumerate(message):
        # Находим сдвиг для текущего символа с использованием паттерна
        ...
        # Шифруем символ с помощью сдвига
        if char.isalpha():
            ...
        else:
            # Если символ не буква, оставляем его без изменений
            ...

    return result

# Пример использования
message = "hello, world!"
pattern = [1, 2, 3, 4, 5]
encrypted_message = complex_caesar_cipher(message, pattern)
print("Зашифрованное сообщение:", encrypted_message)

